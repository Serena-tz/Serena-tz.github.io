{
    "version": "https://jsonfeed.org/version/1",
    "title": "阳光果苏 • All posts by \"git\" tag",
    "description": "心情笔记 & 编程日记",
    "home_page_url": "https://Serena-tz.github.io",
    "items": [
        {
            "id": "https://serena-tz.github.io/2020/10/17/git%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/",
            "url": "https://serena-tz.github.io/2020/10/17/git%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/",
            "title": "git零基础入门",
            "date_published": "2020-10-17T07:57:42.000Z",
            "content_html": "<h2 id=\"系统命令行工具来操作电脑\"><a class=\"markdownIt-Anchor\" href=\"#系统命令行工具来操作电脑\">#</a> 系统命令行工具来操作电脑</h2>\n<p>CMD–command。使用使用指令的方式来操作我们的电脑。现在还在使用命令行操作的系统：Linux 和 Unix，服务器电脑中还有存在。可视化的系统：window 和 Mac</p>\n<h2 id=\"可以使用以下任意一种工具来输入命令行\"><a class=\"markdownIt-Anchor\" href=\"#可以使用以下任意一种工具来输入命令行\">#</a> 可以使用以下任意一种工具来输入命令行</h2>\n<ol>\n<li>\n<p>cmd</p>\n<p>所有的 window 系统都支持<br>\n打开方式：<br>\nwin+R 键–&gt;cmd–&gt; 回车<br>\n缺点：最古老的命令行工具，一些新的指令不支持，比如 ls</p>\n</li>\n<li>\n<p>powershell<br>\n 是 win10 才有的命令行工具 - 更加强大更加好用<br>\n<strong>好处：</strong><br>\n可以在任意文件夹下通过<strong> shift + 右键单击</strong>，打开该工具，可以直接定位到该目录下，而不需要多次 Cd 才能进入目录<br>\n以后经常要使用的方式</p>\n</li>\n<li>\n<p>git bash<br>\n 安装了 git 软件后才有的，学 github 安装了两款软件：github 桌面版，git 软件。<br>\n安装后，可以在任意文件夹下右键单击，选择 git bash</p>\n<p><strong>好处：</strong><br>\na. 完成使用命令行操作 github 的任务<br>\n b. 像 powerShell 那样在任意文件夹下运行以上任意指令</p>\n</li>\n</ol>\n<h2 id=\"一些常用的打开软件的指令\"><a class=\"markdownIt-Anchor\" href=\"#一些常用的打开软件的指令\">#</a> 一些常用的打开软件的指令</h2>\n<ol>\n<li>notepad  记事本</li>\n<li>calc   计算器</li>\n<li>write  写字板</li>\n<li>mspaint  画图的软件</li>\n</ol>\n<h2 id=\"命令行来操作文件和文件夹\"><a class=\"markdownIt-Anchor\" href=\"#命令行来操作文件和文件夹\">#</a> 命令行来操作文件和文件夹</h2>\n<ol>\n<li>\n<p>进入到指定的硬盘分区</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">盘符:  然后回车</span><br><span class=\"line\">比如：f:  <span class=\"comment\">//输入后回车</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>打开文件<br>\n找到对应的文件夹后  输入  文件名 回车</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">比如： </span><br><span class=\"line\"><span class=\"number\">123.</span>txt  回车</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>新建文件夹<br>\n md 文件夹名称  —make directory 的简称</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">比如：md  test   </span><br><span class=\"line\"><span class=\"comment\">//在当前路径下新建了一个test文件夹</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>打开指定的文件夹<br>\n语法：cd  文件夹的名字</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">回到上一级目录   </span><br><span class=\"line\">cd ../</span><br><span class=\"line\">回到根目录   </span><br><span class=\"line\">cd /</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>列出该文件夹下的所有的文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入指令：ls  <span class=\"comment\">//指的是list  </span></span><br><span class=\"line\">然后回车  </span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"操作网络的指令\"><a class=\"markdownIt-Anchor\" href=\"#操作网络的指令\">#</a> 操作网络的指令</h2>\n<ol>\n<li>\n<p>看看网站是否能访问</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping www.baidu.com </span><br><span class=\"line\"><span class=\"comment\">//看看百度能不能ping得通,如果能返回数据则可以</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>看看自己的电脑 IP 是多少<br>\n在命令行中输入：ipconfig  回车</p>\n</li>\n</ol>\n<h2 id=\"cmd小技巧\"><a class=\"markdownIt-Anchor\" href=\"#cmd小技巧\">#</a> cmd 小技巧</h2>\n<ol>\n<li>\n<p>使用键盘上下键可以切换到上一条或下一条指令</p>\n</li>\n<li>\n<p>ctrl +C 退出未完成的指令</p>\n</li>\n</ol>\n<h2 id=\"使用命令行来操作github\"><a class=\"markdownIt-Anchor\" href=\"#使用命令行来操作github\">#</a> 使用命令行来操作 github</h2>\n<p>准备工作：安装 git 软件，目的让系统支持 git 指令，因为 git 指令是非系统指令，要让系统识别，就需要安装对应的软件。下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHM=\">https://git-scm.com/downloads</span></p>\n<h3 id=\"场景1-线上github资源库下载到线下本地\"><a class=\"markdownIt-Anchor\" href=\"#场景1-线上github资源库下载到线下本地\">#</a> 场景 1: 线上（github）资源库下载到线下（本地）</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span>复制要clone的在线资源库地址</span><br><span class=\"line\">比如：</span><br><span class=\"line\">git clone 资源库地址</span><br><span class=\"line\">比如：</span><br><span class=\"line\">git clone https:<span class=\"comment\">//github.com/kouok/web19-beidou.git</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"场景2同步线上资源库到本地后如何将本地更新同步到线上\"><a class=\"markdownIt-Anchor\" href=\"#场景2同步线上资源库到本地后如何将本地更新同步到线上\">#</a> 场景 2：同步线上资源库到本地后，如何将本地更新同步到线上</h3>\n<p>场景 2 在场景 1 的基础上新增了如下步骤：注意看是不是进入到了要操作的那个本地资源库目录下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">在本地资源库目录修改或新增文件、文件后按下面的操作：</span><br><span class=\"line\"><span class=\"number\">1.</span> 添加到暂存区</span><br><span class=\"line\">\tgit add 文件或文件夹的名字 <span class=\"comment\">//同步一个</span></span><br><span class=\"line\">    git add .  <span class=\"comment\">//同步所有</span></span><br><span class=\"line\"><span class=\"number\">2.</span> 提交到暂存区</span><br><span class=\"line\">\tgit commit -m <span class=\"string\">&quot;写注释内容&quot;</span></span><br><span class=\"line\"><span class=\"number\">3.</span> 正式提交到线上</span><br><span class=\"line\">\tgit push</span><br><span class=\"line\">回到对应的github远程库中看看是否已经同步过来。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"场景3远程库更新后如何同步到线下\"><a class=\"markdownIt-Anchor\" href=\"#场景3远程库更新后如何同步到线下\">#</a> 场景 3：远程库更新后如何同步到线下</h3>\n<p>已经同步到本地后，远程库更新了如何本地也更新。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将线上最新的资源拉取到本地</span><br><span class=\"line\">在本地资源库中输入以下指令即可：</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<h3 id=\"场景4在任意文件夹下同步到远程库\"><a class=\"markdownIt-Anchor\" href=\"#场景4在任意文件夹下同步到远程库\">#</a> 场景 4：在任意文件夹下同步到远程库</h3>\n<p>步骤：</p>\n<ol>\n<li>\n<p>在要提交的目录下打开命令行工具</p>\n</li>\n<li>\n<p>初始化 git 项目<br>\n git init<br>\n 作用：会在当前目录下新增一个.git 目录用来记录同步状态</p>\n</li>\n<li>\n<p>按照提交三部曲进行（场景 2）<br>\ngit add .<br>\ngit commit -m “注释”</p>\n</li>\n<li>\n<p>关联远程目录库<br>\n在关联前，首先要到 github 中创建一个空的资源库，然后复制远程库地址：</p>\n<p>语法：git remote add origin 远程库地址<br>\n比如：<br>\ngit remote add origin <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tvdW9rL3dlYjE5LWJzLXByb2plY3QuZ2l0\">https://github.com/kouok/web19-bs-project.git</span></p>\n</li>\n<li>\n<p>正式提交<br>\n git push -u origin master<br>\n 可能会弹出输入框让你输入用户名，密码</p>\n</li>\n<li>\n<p>后续就按场景 2 或场景 3 进行（本地更新了或远程更新了才需要按场景 2 或场景 3）</p>\n</li>\n</ol>\n<p>注意：在已有的资源库中不能再嵌套另外一个资源库。</p>\n",
            "tags": [
                "git"
            ]
        }
    ]
}