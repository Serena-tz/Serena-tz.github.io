<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>阳光果苏 • Posts by &#34;axios&#34; tag</title>
        <link>https://Serena-tz.github.io</link>
        <description>心情笔记 &amp; 编程日记</description>
        <language>zh-CN</language>
        <pubDate>Wed, 11 Nov 2020 09:44:04 +0800</pubDate>
        <lastBuildDate>Wed, 11 Nov 2020 09:44:04 +0800</lastBuildDate>
        <category>Bootstrap</category>
        <category>CSS3</category>
        <category>H5</category>
        <category>jquery</category>
        <category>PHP</category>
        <category>SEO</category>
        <category>ajax</category>
        <category>axios</category>
        <category>echarts</category>
        <category>git</category>
        <category>manual</category>
        <category>json</category>
        <category>less</category>
        <category>node</category>
        <category>vue</category>
        <category>npm</category>
        <category>ES6</category>
        <category>webpack</category>
        <category>地理位置</category>
        <category>响应式布局</category>
        <category>服务器</category>
        <category>小程序</category>
        <category>弹性盒子</category>
        <category>本地存储</category>
        <category>数据库</category>
        <category>移动端</category>
        <category>跨域</category>
        <category>canvas</category>
        <item>
            <guid isPermalink="true">https://serena-tz.github.io/2020/11/11/axios%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</guid>
            <title>axios的基本介绍</title>
            <link>https://serena-tz.github.io/2020/11/11/axios%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</link>
            <category>axios</category>
            <pubDate>Wed, 11 Nov 2020 09:44:04 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;axios-vue的ajax版&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#axios-vue的ajax版&#34;&gt;#&lt;/a&gt; axios -vue 的 ajax 版&lt;/h2&gt;
&lt;p&gt;假设用 vue 来获取数据，不是使用原生的 JS 方式获取，也不需要使用 jquery 的方式，而是用 axios。axios 目前是 vue 的官方推荐的 ajax 方式。axios 是第三方的基于 ES6 的 promise 封装的 ajax 方式。特色：支持浏览器、Nodejs 环境。语法类似于 jquery 的 ajax 方法。支持链式操作。官网： &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2F4aW9zL2F4aW9z&#34;&gt;https://github.com/axios/axios&lt;/span&gt; 。不是 vue 自带，如果要使用，需要额外下载。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F;在当前项目中，执行以下指令&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cnpm i axios -D&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
   &lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F;核心代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;this.$axios(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    method:&amp;quot;get|post&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    url:&amp;quot;xxx&amp;#x2F;xxx.json&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.then((res)&amp;#x3D;&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x2F;&amp;#x2F;获取数据成功后会执行的方法，数据在res中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.catch((err)&amp;#x3D;&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x2F;&amp;#x2F;获取数据失败后会执行的函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; a. 只在某个组件中使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x2F;&amp;#x2F;在组件中，比如home.vue中导入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    import axios from &amp;#39;axios&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;&amp;#x2F;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; b. 全局在项目任意文件都可以使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;何时获取数据&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;a. 点击了后执行，则将 axios 代码放在 methods 中。&lt;/p&gt;
&lt;p&gt;b. 想要加载组件就获取数据，就需要将 axios 放在 vue 的声明周期的钩子函数中，比如 created。&lt;/p&gt;
&lt;h2 id=&#34;vue的生命周期函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vue的生命周期函数&#34;&gt;#&lt;/a&gt; Vue 的生命周期函数&lt;/h2&gt;
&lt;p&gt;生命周期：变量从出生到销毁这段时间。&lt;/p&gt;
&lt;p&gt;局部：函数执行完就销毁。&lt;/p&gt;
&lt;p&gt;全局：页面关闭就销毁。&lt;/p&gt;
&lt;p&gt;vue：从 new 实例开始到 Ctrl+C 终止项目。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;什么是生命周期。通俗讲，指的是 Vue 中实例或者组件从创建到消灭中间经过的一系列过程。就类似于一个人从出生到死亡。或一个变量从创建到销毁。这一过程中会发生很多什么时候做什么的事情，比如实例创建，元素绑定，视图渲染，vue 函数被执行等等。在该生命周期不同阶段会触发不同的函数，就称之为生命周期钩子函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;钩子函数、回调函数与普通函数的区别。&lt;/p&gt;
&lt;p&gt;比如 created 是钩子函数，当 vue 模板还没渲染成 HTML 前就会被调用，钩子函数与回调函数的区别在于，钩子函数只要满足了某个状态，比如消息捕获了，页面载入进来了就会触发，而回调函数则是完成了上面一个动作再执行，比如动画完成后再执行回调，普通函数则一般是通过调用执行。&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F;我们学过的钩子函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;onreadychange&amp;#x3D;function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(readyState&amp;#x3D;&amp;#x3D;4)&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F;我们学过的回调函数：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(&amp;quot;div&amp;quot;).click(function()&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$.animate(&amp;quot;样式&amp;quot;,&amp;quot;时间&amp;quot;,&amp;quot;运动方式&amp;quot;,function()&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;axios全局使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#axios全局使用&#34;&gt;#&lt;/a&gt; axios 全局使用&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在 main.js 中操作&lt;/li&gt;
&lt;/ol&gt;
   &lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 导入axios，需要启用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; axios &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;axios&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 需要挂载到vue的实例中，变成Vue的全局方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Vuee.prototype.$axios=axios;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在组件任意地方使用&lt;/li&gt;
&lt;/ol&gt;
   &lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.$axios.get().then().catch();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//或&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.$axios(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    url:&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;).then().catch();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;props的验证&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#props的验证&#34;&gt;#&lt;/a&gt; props 的验证&lt;/h2&gt;
&lt;p&gt;如果不验证，那么使用父组件传进来的数据是这样使用：props:[‘自定义属性’] 。验证的目的：将从父组件传进来的数据类型进行验证，如果&lt;strong&gt;不符合要&lt;/strong&gt;求，则会报错。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;基本用法：&lt;br&gt;
语法：&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;props:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#x2F;&amp;#x2F; 自定义属性：数据的原始类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; 比如：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;props:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	seller：Object&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F; 如果要验证多种数据类型需要使用数组将多个类型放在一块。比如：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;props:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    seller：[Object,Number]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F;常见的数据类型为：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;String&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Number&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Boolean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Function&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Object&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Array&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Symbol  该类型为ES6引入的新类型，表示是独一无二的值，Symbol 值通过Symbol函数生成&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置默认值。 比如：&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;props: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         selectedFoods: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           type: Array, &amp;#x2F;&amp;#x2F;当类型是Array或Object时，default就是一个函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           default () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             return [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         deliveryPrice: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           type: Number,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           default: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置必填项。比如：&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x2F;&amp;#x2F;必填且传进来的必须是字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;seller: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    type: String,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    required: true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;vue中的ref属性和thisrefs&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vue中的ref属性和thisrefs&#34;&gt;#&lt;/a&gt; vue 中的 ref 属性和 this.$refs&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在 Vue 的模板中，我们可以在模板中的任何元素中添加 ref 属性，这样就可以在 Vue 实例中引用这些元素。更具体地说，可以&lt;strong&gt;访问 DOM 元素&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;在 Vue 实例上使用&lt;strong&gt; this.$refs&lt;/strong&gt; 属性可以通过 ref=&#39; 属性值’来引用这个按钮，得到的是一个匹配到该属性值的 DOM 数组。&lt;/li&gt;
&lt;li&gt;在 vue 的自定义标签代表的组件上添加 ref=“属性值”，得到的是该组件实例，意味着可以访问该实例的所有属性和方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：如果只是写 this.$refs ，那么得到的是在 this 内所有的有 ref 属性的 DOM 节点对象和组件实例对象。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 例子1：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// HTML模板中：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 添加ref属性，这样就可以在vue的实例中访问该元素，从而可操作该元素 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;v-for&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;item,index in seller.supports&amp;#x27;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;ref&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;list&amp;quot;&lt;/span&gt; @&lt;span class=&#34;attr&#34;&gt;click&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;hello(index)&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123;item.description&amp;#125;&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// vue实例的methods方法中：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;methods:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  hello(i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      /*通过在元素上绑定事件，可以通过this.$refs访问DOM,他是一个对象，是所有在DOM上使用了ref属性的数组元素的集合，可以通过数组下标得到具体的那个DOM，如果是循环，传入index即可*/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      console.log(this.$refs.list[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      this.$refs.list[i].innerText=&amp;#x27;我被点击了&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 例子2：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 导入详情页模板&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import vdetails from &amp;#x27;@/components/details&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- 在template中使用了该目标 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;vdetails&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;ref&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;showFlag&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;vdetails&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--可以在当前组件通过  --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;this.$refs.showFlag访问vdetails组件实例（所有方法和属性）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;也就是如果在自定义组件标签中添加的ref，那么得到的就是该组件实例，也就可以通过该组件实例访问组件实例的所有方法和属性&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;调试js代码的几种方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#调试js代码的几种方式&#34;&gt;#&lt;/a&gt; 调试 JS 代码的几种方式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;使用 console.log (变量)&lt;/li&gt;
&lt;li&gt;在 source 面板中设置断点&lt;/li&gt;
&lt;li&gt;在代码中使用写 debugger&lt;/li&gt;
&lt;li&gt;假设用的是 vue，则有个 Vue 的工具可以查看或者开启 Vue 的开发者模式&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
    </channel>
</rss>
