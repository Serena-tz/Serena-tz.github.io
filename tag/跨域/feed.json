{
    "version": "https://jsonfeed.org/version/1",
    "title": "阳光果苏 • All posts by \"跨域\" tag",
    "description": "心情笔记 & 编程日记",
    "home_page_url": "https://Serena-tz.github.io",
    "items": [
        {
            "id": "https://serena-tz.github.io/2020/10/15/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/",
            "url": "https://serena-tz.github.io/2020/10/15/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/",
            "title": "跨域问题",
            "date_published": "2020-10-15T02:12:52.000Z",
            "content_html": "<h2 id=\"如何获取数据地址\"><a class=\"markdownIt-Anchor\" href=\"#如何获取数据地址\">#</a> 如何获取数据地址</h2>\n<ol>\n<li>\n<p>后端。后端会给一个详细的接口文档地址给前端。</p>\n</li>\n<li>\n<p>第三方的地址。因为浏览器的同源策略，在 A 站点中去拿 B 站点的数据会产生一个跨域问题。</p>\n</li>\n</ol>\n<h2 id=\"如何解决跨域问题\"><a class=\"markdownIt-Anchor\" href=\"#如何解决跨域问题\">#</a> 如何解决跨域问题</h2>\n<ol>\n<li>\n<p>让后端开放数据访问权限（除非是自己公司的网站，否则成功概率几乎为零）</p>\n</li>\n<li>\n<p>使用 JSONP（json with padding）光明正大的拿（用来解决跨域问题的最有效的方式）</p>\n<p>将 json 数据填充到函数参数中以达到传递的目的。<strong>JSONP 与 JSON 地址的唯一区别是前者用函数调用包裹者的</strong>。如果是 jsonp 就用 jsonp 来解决，否则用常规的 ajax 来解决。</p>\n</li>\n</ol>\n<h2 id=\"如何知道数据地址\"><a class=\"markdownIt-Anchor\" href=\"#如何知道数据地址\">#</a> 如何知道数据地址</h2>\n<p>只有知道数据地址才能使用 jsonp 来解决。jsonp 也是用来获取数据的一种方式。</p>\n<ol>\n<li>\n<p>向后端要</p>\n</li>\n<li>\n<p>通过网络面板自己去找数据</p>\n</li>\n</ol>\n<p>如何获取的步骤<br>\n a、打开浏览器的开发者工具<br>\n b、清空网络面板<br>\n c、发送一个请求，比如输入内容，看看网络面板的请求状态，找下有没有 xhr 等<br>\n d、点击打开该网络地址，看看是不是数据源</p>\n<ol start=\"3\">\n<li>通过公开的渠道或别人告诉你的地址来获取<br>\n 1、3 是拿来主义。2 才是技巧</li>\n</ol>\n<h2 id=\"使用js的方式来解决跨域问题\"><a class=\"markdownIt-Anchor\" href=\"#使用js的方式来解决跨域问题\">#</a> 使用 JS 的方式来解决跨域问题</h2>\n<p>实现原理：<br>\n1. 使用 script 标签引入数据（将 json 数据放入函数调用的参数中）<br>\n2. 定义函数，函数即为上面的函数<br>\n 3. 在定义的函数内使用传过来的数据<br>\n 4. 优化：将 script 带来的数据作为动态加载，只有需要的时候才请求，这样就做到了类似于 ajax 的效果</p>\n<h2 id=\"使用jq的方式来解决跨域问题\"><a class=\"markdownIt-Anchor\" href=\"#使用jq的方式来解决跨域问题\">#</a> 使用 JQ 的方式来解决跨域问题</h2>\n<p>ajax 和 jsonp 合二为一了。使用 JQ 来获取 jsonp 易如反掌，仅需要在昨天的 ajax 模板中添加两个配置项即可搞定。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    <span class=\"comment\">//默认是get，所以可以省略，等价于open()</span></span><br><span class=\"line\">   type:<span class=\"string\">&quot;get|post&quot;</span>,</span><br><span class=\"line\">   <span class=\"comment\">//等价于open()</span></span><br><span class=\"line\">   url:<span class=\"string\">&quot;数据地址&quot;</span>,</span><br><span class=\"line\">   dataType:<span class=\"string\">&quot;jsonp&quot;</span>,</span><br><span class=\"line\">   jsonp:<span class=\"string\">&quot;回调函数的属性名，一般填cb,默认是callback&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">//该方法只会在数据获取成功后才会执行，</span></span><br><span class=\"line\">    <span class=\"comment\">//等价于onreadystatechange,if(xhr.readyState==4&amp;&amp;xhr.status==200)</span></span><br><span class=\"line\">   success:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//写如何解析json的代码</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(res);<span class=\"comment\">//res就是真对象，甚至可以不需要使用JSON.parse()</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//原来的JS是没有的，除非写else语句，可选</span></span><br><span class=\"line\">    error:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;);  </span><br></pre></td></tr></table></figure>\n<h2 id=\"解决跨域问题实例\"><a class=\"markdownIt-Anchor\" href=\"#解决跨域问题实例\">#</a> 解决跨域问题实例</h2>\n<h3 id=\"原生的js\"><a class=\"markdownIt-Anchor\" href=\"#原生的js\">#</a> 原生的 js</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class=\"line\">    &lt;!-- </span><br><span class=\"line\">        原生可以跨域的标签有：</span><br><span class=\"line\">        link:</span><br><span class=\"line\">        a</span><br><span class=\"line\">        video</span><br><span class=\"line\">        audio</span><br><span class=\"line\">        img</span><br><span class=\"line\">        script 它被选中了用来解决跨域问题</span><br><span class=\"line\">     --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">     &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;ipt&quot; value&#x3D;&quot;&quot;&gt;</span><br><span class=\"line\">     &lt;button id&#x3D;&quot;btn&quot;&gt;搜索建议&lt;&#x2F;button&gt;</span><br><span class=\"line\">     &lt;ul id&#x3D;&quot;list&quot;&gt;</span><br><span class=\"line\">         &lt;!-- &lt;li&gt;jut&lt;&#x2F;li&gt; --&gt;</span><br><span class=\"line\">     &lt;&#x2F;ul&gt;</span><br><span class=\"line\">     &lt;script&gt;</span><br><span class=\"line\">        &#x2F;&#x2F;为了让它看起来更加像ajax，我们可以将调用的代码改为动态生成</span><br><span class=\"line\">    var btn&#x3D;document.getElementById(&quot;btn&quot;);</span><br><span class=\"line\">    var ipt&#x3D;document.getElementById(&quot;ipt&quot;);</span><br><span class=\"line\">    &#x2F;&#x2F; 点击了按钮后再调用函数体的代码</span><br><span class=\"line\">    &#x2F;&#x2F; 按需加载</span><br><span class=\"line\">    btn.onclick&#x3D;function()&#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 动态生成一个script标签，该标签中的src地址就是jsonp地址，其实本质上就是在调用一个函数，并且返回了该数据</span><br><span class=\"line\">         var os&#x3D;document.createElement(&quot;script&quot;);</span><br><span class=\"line\">            &#x2F;&#x2F; os.src&#x3D;&quot;jsonp&#x2F;baidu1.js&quot;;</span><br><span class=\"line\">            os.src&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&#x2F;sugrec?pre&#x3D;1&amp;p&#x3D;3&amp;ie&#x3D;utf-8&amp;json&#x3D;1&amp;prod&#x3D;pc&amp;from&#x3D;pc_web&amp;sugsid&#x3D;32617,1445,32723,32231,7517,32117,31709,32761,26350&amp;wd&#x3D;&quot;+ipt.value+&quot;&amp;req&#x3D;2&amp;csor&#x3D;1&amp;cb&#x3D;jQuery1102032309254967909795_1602724322024&amp;_&#x3D;1602724322031&quot;;</span><br><span class=\"line\">            document.body.appendChild(os);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F;写函数体，fun</span><br><span class=\"line\">     function jQuery1102032309254967909795_1602724322024(data)&#123;</span><br><span class=\"line\">        console.log(data);&#x2F;&#x2F;拿到了外部JS的数据</span><br><span class=\"line\">        &#x2F;&#x2F;数组就数据，拿到后就可以开始干活了</span><br><span class=\"line\">        &#x2F;&#x2F;跟之前解析数据一样的做法了</span><br><span class=\"line\">        &#x2F;&#x2F;</span><br><span class=\"line\">        var json&#x3D;data.g;</span><br><span class=\"line\">        console.log(json);</span><br><span class=\"line\">        var html&#x3D;&quot;&quot;;</span><br><span class=\"line\">        for(var i&#x3D;0;i&lt;json.length;i++)&#123;</span><br><span class=\"line\">            html+&#x3D;&#96;&lt;li&gt;$&#123;json[i].q&#125;&lt;&#x2F;li&gt;&#96;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        document.getElementById(&quot;list&quot;).innerHTML&#x3D;html;</span><br><span class=\"line\">        </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">     &lt;&#x2F;script&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">     </span><br><span class=\"line\">     </span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"改回调函数名\"><a class=\"markdownIt-Anchor\" href=\"#改回调函数名\">#</a> 改回调函数名</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class=\"line\">    &lt;!-- </span><br><span class=\"line\">        原生可以跨域的标签有：</span><br><span class=\"line\">        link:</span><br><span class=\"line\">        a</span><br><span class=\"line\">        video</span><br><span class=\"line\">        audio</span><br><span class=\"line\">        img</span><br><span class=\"line\">        script 它被选中了用来解决跨域问题</span><br><span class=\"line\">     --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">     &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;ipt&quot; value&#x3D;&quot;&quot;&gt;</span><br><span class=\"line\">     &lt;button id&#x3D;&quot;btn&quot;&gt;搜索建议&lt;&#x2F;button&gt;</span><br><span class=\"line\">     &lt;ul id&#x3D;&quot;list&quot;&gt;</span><br><span class=\"line\">         &lt;!-- &lt;li&gt;jut&lt;&#x2F;li&gt; --&gt;</span><br><span class=\"line\">     &lt;&#x2F;ul&gt;</span><br><span class=\"line\">     &lt;script&gt;</span><br><span class=\"line\">        &#x2F;&#x2F;为了让它看起来更加像ajax，我们可以将调用的代码改为动态生成</span><br><span class=\"line\">    var btn&#x3D;document.getElementById(&quot;btn&quot;);</span><br><span class=\"line\">    var ipt&#x3D;document.getElementById(&quot;ipt&quot;);</span><br><span class=\"line\">    &#x2F;&#x2F; 点击了按钮后再调用函数体的代码</span><br><span class=\"line\">    &#x2F;&#x2F; 按需加载</span><br><span class=\"line\">    btn.onclick&#x3D;function()&#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 动态生成一个script标签，该标签中的src地址就是jsonp地址，其实本质上就是在调用一个函数，并且返回了该数据</span><br><span class=\"line\">         var os&#x3D;document.createElement(&quot;script&quot;);</span><br><span class=\"line\">            &#x2F;&#x2F; os.src&#x3D;&quot;jsonp&#x2F;baidu1.js&quot;;</span><br><span class=\"line\">            os.src&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&#x2F;sugrec?pre&#x3D;1&amp;p&#x3D;3&amp;ie&#x3D;utf-8&amp;json&#x3D;1&amp;prod&#x3D;pc&amp;from&#x3D;pc_web&amp;sugsid&#x3D;32617,1445,32723,32231,7517,32117,31709,32761,26350&amp;wd&#x3D;&quot;+ipt.value+&quot;&amp;req&#x3D;2&amp;csor&#x3D;1&amp;cb&#x3D;fun&amp;_&#x3D;1602724322031&quot;;</span><br><span class=\"line\">            document.body.appendChild(os);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#x2F;&#x2F; cb &#x3D;&#x3D;&#x3D; callback  回调</span><br><span class=\"line\">            &#x2F;&#x2F; callback  </span><br><span class=\"line\">            &#x2F;&#x2F; 改调用的函数名的</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F;写函数体，fun</span><br><span class=\"line\">     function fun(data)&#123;</span><br><span class=\"line\">        console.log(data);&#x2F;&#x2F;拿到了外部JS的数据</span><br><span class=\"line\">        &#x2F;&#x2F;数组就数据，拿到后就可以开始干活了</span><br><span class=\"line\">        &#x2F;&#x2F;跟之前解析数据一样的做法了</span><br><span class=\"line\">        &#x2F;&#x2F;</span><br><span class=\"line\">        var json&#x3D;data.g;</span><br><span class=\"line\">        console.log(json);</span><br><span class=\"line\">        var html&#x3D;&quot;&quot;;</span><br><span class=\"line\">        for(var i&#x3D;0;i&lt;json.length;i++)&#123;</span><br><span class=\"line\">            html+&#x3D;&#96;&lt;li&gt;$&#123;json[i].q&#125;&lt;&#x2F;li&gt;&#96;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        document.getElementById(&quot;list&quot;).innerHTML&#x3D;html;</span><br><span class=\"line\">        </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">     &lt;&#x2F;script&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">     </span><br><span class=\"line\">     </span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"用jq的方式\"><a class=\"markdownIt-Anchor\" href=\"#用jq的方式\">#</a> 用 jq 的方式</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class=\"line\">    &lt;script src&#x3D;&quot;jquery-3.5.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class=\"line\">&lt;&#x2F;head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;ipt&quot; value&#x3D;&quot;&quot;&gt;</span><br><span class=\"line\">    &lt;ul id&#x3D;&quot;list&quot;&gt;</span><br><span class=\"line\">        &lt;!-- &lt;li&gt;jut&lt;&#x2F;li&gt; --&gt;</span><br><span class=\"line\">    &lt;&#x2F;ul&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">    $(&quot;#ipt&quot;).blur(function()&#123;</span><br><span class=\"line\">        $.ajax(&#123;</span><br><span class=\"line\">            &#x2F;&#x2F;默认是get，所以可以省略，等价于open()</span><br><span class=\"line\">           type:&quot;get&quot;,</span><br><span class=\"line\">           &#x2F;&#x2F;等价于open()</span><br><span class=\"line\">           url:&quot;https:&#x2F;&#x2F;www.baidu.com&#x2F;sugrec?pre&#x3D;1&amp;p&#x3D;3&amp;ie&#x3D;utf-8&amp;json&#x3D;1&amp;prod&#x3D;pc&amp;from&#x3D;pc_web&amp;sugsid&#x3D;32617,1445,32723,32231,7517,32117,31709,32761,26350&amp;wd&#x3D;&quot;+$(&quot;#ipt&quot;).val()+&quot;&amp;req&#x3D;2&amp;csor&#x3D;1&amp;cb&#x3D;fun&amp;_&#x3D;1602724322031&quot;,</span><br><span class=\"line\">           &#x2F;&#x2F; 如果是JSONP地址，则添加dataType属性</span><br><span class=\"line\">           dataType:&quot;jsonp&quot;,</span><br><span class=\"line\">           &#x2F;&#x2F; jsonp属性指的是url数据地址的用来填写回调函数的那个属性名</span><br><span class=\"line\">           &#x2F;&#x2F; 一般写cb,callback等，默认是callback</span><br><span class=\"line\">           jsonp:&quot;cb&quot;,</span><br><span class=\"line\">            &#x2F;&#x2F;该方法只会在数据获取成功后才会执行，</span><br><span class=\"line\">            &#x2F;&#x2F;等价于onreadystatechange,if(xhr.readyState&#x3D;&#x3D;4&amp;&amp;xhr.status&#x3D;&#x3D;200)</span><br><span class=\"line\">           success:function(res)&#123;</span><br><span class=\"line\">                &#x2F;&#x2F;写如何解析json的代码</span><br><span class=\"line\">                console.log(res);&#x2F;&#x2F;res就是真对象，甚至可以不需要使用JSON.parse()</span><br><span class=\"line\">                var json&#x3D;res.g;</span><br><span class=\"line\">                console.log(json);</span><br><span class=\"line\">                var html&#x3D;&quot;&quot;;</span><br><span class=\"line\">                for(var i&#x3D;0;i&lt;json.length;i++)&#123;</span><br><span class=\"line\">                    html+&#x3D;&#96;&lt;li&gt;$&#123;json[i].q&#125;&lt;&#x2F;li&gt;&#96;;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                document.getElementById(&quot;list&quot;).innerHTML&#x3D;html;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#x2F;&#x2F;原来的JS是没有的，除非写else语句，可选</span><br><span class=\"line\">            error:function(err)&#123;</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;); </span><br><span class=\"line\">    &#125;); </span><br><span class=\"line\">    &lt;&#x2F;script&gt;</span><br><span class=\"line\">&lt;&#x2F;body&gt;</span><br><span class=\"line\">&lt;&#x2F;html&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "跨域"
            ]
        }
    ]
}